import java.util.ArrayList;
/**
 * Contains default shapes to help generate new maps with
 *  @author  David Sun
 *  @version May 20, 2014
 */
class shape_default {
  ArrayList<shape> shapes = new ArrayList<shape>();
  shape_default(){
    //the 26 different shapes in the current database
    int[][] a = {{0,1},{0,2},{0,3},{0,4},{1,1},{2,0},{2,1}};
    shapes.add(new shape(a));
    int[][] b = {{0,0},{0,1},{0,2},{0,3},{0,4},{0,5},{0,6},{0,7}};
    shapes.add(new shape(b));
    int[][] c = {{0,2},{1,2},{2,0},{2,1},{2,2},{2,3},{2,4},{3,2},{4,2}};
    shapes.add(new shape(c));
    int[][] d = {{0,0},{1,0},{2,0},{2,1},{3,1},{3,2}};
    shapes.add(new shape(d));
    int[][] e = {{0,2},{1,0},{1,1},{1,2},{2,2},{3,2}};
    shapes.add(new shape(e));
    int[][] f = {{0,0},{0,1},{0,2},{0,3},{0,4},{1,4},{2,4},{3,4},{4,4}};
    shapes.add(new shape(f));
    int[][] g = {{0,0},{1,0},{2,0},{3,0},{4,0},{4,1},{4,2},{4,3},{4,4}};
    shapes.add(new shape(g));
    int[][] h = {{0,0},{0,1},{0,2},{0,3},{0,4},{0,5},{1,0},{1,5},{4,0},{4,5},{5,0},{5,1},{5,2},{5,3},{5,4},{5,5}};
    shapes.add(new shape(h));
    int[][] i = {{0,1},{1,0},{1,1},{1,2},{2,1}};
    shapes.add(new shape(i));
    int[][] j = {{0,0},{0,1},{0,2},{0,3}};
    shapes.add(new shape(j));
    int[][] k = {{0,0},{0,1},{0,2},{0,3},{2,0},{2,1},{2,2},{2,3}};
    shapes.add(new shape(k));
    int[][] l = {{0,0},{0,1},{0,2},{0,3},{1,3}};
    shapes.add(new shape(l));
    int[][] m = {{0,0},{0,2},{0,3},{0,4}};
    shapes.add(new shape(m));
    int[][] n = {{0,0},{0,1},{1,0},{2,0}};
    shapes.add(new shape(n));
    int[][] o = {{0,0},{0,1}};
    shapes.add(new shape(o));
    int[][] p = {{0,0},{0,1},{1,1}};
    shapes.add(new shape(p));
    int[][] q = {{0,0},{0,1},{0,2}};
    shapes.add(new shape(q));
    int[][] r = {{0,0},{0,1},{0,2},{1,0},{2,0},{2,1},{2,2},{2,3}};
    shapes.add(new shape(r));
    int[][] s = {{0,0},{0,1},{0,2},{0,3},{1,3},{1,4},{1,5},{1,6},{1,7}};
    shapes.add(new shape(s));
    int[][] t = {{0,2},{1,0},{1,1},{1,2},{1,3},{1,4},{2,2}};
    shapes.add(new shape(t));
    int[][] u = {{0,0},{0,1},{0,2},{0,3},{0,4},{1,4},{2,0},{2,4},{3,4},{4,0},{4,1},{4,4}};
    shapes.add(new shape(u));
    int[][] v = {{0,1},{0,2},{0,3},{0,3},{1,0},{1,1},{3,1},{1,2},{1,3},{1,4},{2,1},{2,0},{2,3},{2,4},{3,0},{3,2},{3,3},{3,4},{4,1},{4,2},{4,3},{4,3}};
    shapes.add(new shape(v));
    int[][] w = {{0,0},{0,1},{0,2},{0,3},{0,4},{0,5},{1,5},{2,5},{3,5},{3,6},{3,7},{3,8},{3,9},{2,9},{1,9},{0,9},{0,10},{0,11},{0,12},{0,13},{1,13},{1,13}};
    shapes.add(new shape(w));
    int[][] x = {{0,0},{0,1},{0,5},{0,6},{0,7},{0,11},{0,12},{0,13},{0,14},{1,0},{1,14},{2,0},{2,14},{3,0},{3,14},{4,0},{4,1},{4,5},{4,6},{4,7},{4,11},{4,12},{4,13},{4,14}};
    shapes.add(new shape(x));
    int[][] y = {{0,0},{0,2},{0,4},{0,6},{0,8},{1,0},{1,2},{1,4},{1,6},{1,8},{2,0},{2,2},{2,4},{2,6},{2,8}};
    shapes.add(new shape(y));
    int[][] z = {{0,4},{0,5},{0,6},{1,0},{1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{1,7},{2,0},{2,1},{2,2},{2,3},{2,5},{2,6},{2,7},{2,8},{3,1},{3,2},{3,5},{3,8},{4,2},{4,3},{4,4},{4,5},{4,6},{4,8},{5,2},{5,3},{5,4},{5,6},{5,8},{6,8},{6,2},{6,3},{6,4},{6,5},{6,6},{6,8},
    {7,1},{7,2},{7,5},{7,8},{8,0},{8,1},{8,2},{8,3},{8,5},{8,6},{8,7},{8,8},{9,0},{9,1},{9,2},{9,3},{9,4},{9,5},{9,6},{9,7},{10,4},{10,5},{10,6}};
    shapes.add(new shape(z));
  }
  /**
  *  This randomly chooses a shape and returns it to the map_manager
  *  @return the shape class of the shape chosen
  */
  public shape random(){
    int v = (int)((shapes.size())*Math.random());
    return shapes.get(v);
  }

}
